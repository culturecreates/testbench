import React from 'react';

export default class PreviewRenderer extends React.Component {
  constructor() {
    super();
  }

  iframe = function() {
    const iframeUrl = this.props.settings.url.replace('{{id}}', encodeURIComponent(this.props.id));
    if (!Number.isInteger(this.props.settings.height) || !Number.isInteger(this.props.settings.width)) {
        return {__html:`<p>The manifest must provide the width and height of the preview iframe as integers.</p>`};
    }
    try {
        new URL(iframeUrl);
        // we have a valid URL
        return {__html:`<iframe src="${iframeUrl}" height="${this.props.settings.height}" width="${this.props.settings.width}" scrolling="no"></iframe>`};
    } catch(_) {
        return {__html:`<p>Invalid URL generated by the preview service URL template.</p>`};
    }
  }

  render() {
    return (
     <div>
        {(this.props.id === undefined ?
         <div /> :
         <div dangerouslySetInnerHTML={this.iframe()} />
        )}
     </div>
    );
  }
}

