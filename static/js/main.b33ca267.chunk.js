(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{247:function(e,t,i){e.exports=i(623)},252:function(e,t,i){},254:function(e,t,i){},623:function(e,t,i){"use strict";i.r(t);for(var n=i(0),r=i.n(n),a=i(20),s=i.n(a),o=(i(252),i(9)),c=i(10),p=i(12),l=i(11),u=i(13),h=(i(253),i(254),i(243)),d=i.n(h),m=i(64),y=i.n(m),g=i(14),f=i.n(g),v=function(e){function t(){return Object(o.a)(this,t),Object(p.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e="",t="",i="inherit",n="featureCell-default";!0===this.props.value?(e="glyphicon glyphicon-ok",t="available",i="green",n="featureCell-green"):!1===this.props.value?(e="glyphicon glyphicon-remove",t="unavailable",i="#c00000",n="featureCell-red"):"checking"===this.props.value?(e="glyphicon glyphicon-hourglass",t="fetching..."):"maybe"===this.props.value&&(e="glyphicon glyphicon-search",t="Not reachable via CORS, click to check via JSONP",n="featureCell-yellow");var a=r.a.createElement("span",{className:e,"sr-only":t,style:{color:i}}),s=a;return this.props.onClick&&"maybe"===this.props.value&&(s=r.a.createElement(f.a,{onClick:this.props.onClick,bsStyle:"warning",bsSize:"xsmall",title:"Check with JSONP"},a)),r.a.createElement("td",{className:"featureCell "+n},s)}}]),t}(r.a.Component),b=i(55),E=i.n(b),w=function(e,t){var i=new URL(e);return t&&Object.keys(t).forEach(function(e){return i.searchParams.append(e,t[e])}),i.toString()},S=function(e,t){return E()(w(e,t),{timeout:2e4})},j=function(e,t){return fetch(w(e,t))},k={scheme:"monokai",author:"wimer hazenberg (http://www.monokai.nl)",base00:"#000000",base01:"#383830",base02:"#49483e",base03:"#75715e",base04:"#a59f85",base05:"#00ff00",base06:"#f5f4f1",base07:"#f9f8f5",base08:"#f92672",base09:"#fd971f",base0A:"#f4bf75",base0B:"#a6e22e",base0C:"#a1efe4",base0D:"#66d9ef",base0E:"#ae81ff",base0F:"#cc6633"},C=["0.1","latest"],O=i(147),T=i(242),P=new(i.n(T).a)({allErrors:!0}),R={},q=0,x=Object.entries({.1:{"data-extension-query":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/data-extension-query.json",type:"object",description:"This schema validates a data extension query",properties:{ids:{type:"array",description:"The list of entity identifiers to fetch property values from",items:{type:"string"}},properties:{type:"array",description:"The list of properties to fetch, with their optional configuration",items:{type:"object",properties:{id:{type:"string"},settings:{type:"object"}},required:["id"]}}},required:["ids","properties"]},"data-extension-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/data-extension-response.json",type:"object",description:"This schema validates a data extension response",properties:{meta:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},type:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]}},required:["id","name"]}},rows:{type:"object",patternProperties:{".*":{type:"object",patternProperties:{".*":{type:"array",items:{oneOf:[{type:"object",additionalProperties:!1},{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"],additionalProperties:!1},{type:"object",properties:{str:{type:"string"}},required:["str"],additionalProperties:!1},{type:"object",properties:{float:{type:"number"}},required:["float"],additionalProperties:!1},{type:"object",properties:{int:{type:"integer"}},required:["int"],additionalProperties:!1},{type:"object",properties:{date:{type:"string",description:"Date and time formatted in ISO format",pattern:"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"}},required:["date"],additionalProperties:!1}]}}}}}}},required:["rows","meta"]},manifest:{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/manifest.json",type:"object",description:"This validates a service manifest, describing the features supported by the endpoint.",properties:{name:{type:"string",description:"A human-readable name for the service or data source"},identifierSpace:{type:"string",description:"A URI describing the entity identifiers used in this service"},schemaSpace:{type:"string",description:"A URI describing the schema used in this service"},view:{type:"object",properties:{url:{type:"string",description:"A template to transform an entity identifier into the corresponding URI",pattern:".*\\{\\{id\\}\\}.*"}},required:["url"]},defaultTypes:{type:"array",description:"A list of default types that are considered good generic choices for reconciliation",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},uniqueItems:!0},suggest:{type:"object",description:"Settings for the suggest protocol, to auto-complete entities, properties and types",definitions:{service_definition:{type:"object",properties:{service_url:{type:"string"},service_path:{type:"string"},flyout_service_url:{type:"string"},flyout_service_path:{type:"string",pattern:".*\\$\\{id\\}.*"}},required:[]}},properties:{entity:{$ref:"#/properties/suggest/definitions/service_definition"},property:{$ref:"#/properties/suggest/definitions/service_definition"},type:{$ref:"#/properties/suggest/definitions/service_definition"}}},preview:{type:"object",description:"Settings for the preview protocol, for HTML previews of entities",properties:{url:{type:"string",pattern:".*\\{\\{id\\}\\}.*",description:"A URL pattern which transforms the entity ID into a preview URL for it"},width:{type:"integer",description:"The width of the iframe where to include the HTML preview"},height:{type:"integer",description:"The height of the iframe where to include the HTML preview"}},required:["url","width","height"]},extend:{type:"object",description:"Settings for the data extension protocol, to fetch property values",properties:{propose_properties:{type:"object",description:"Location of the endpoint to propose properties to fetch for a given type",properties:{service_url:{type:"string"},service_path:{type:"string"}}},property_settings:{type:"array",description:"Definition of the settings configurable by the user when fetching a property",items:{oneOf:[{type:"object",description:"Defines a numerical setting on a property",properties:{type:{type:"string",enum:["number"]},default:{type:"number"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"}},required:["type","label","name"]},{type:"object",description:"Defines a string setting on a property",properties:{type:{type:"string",enum:["text"]},default:{type:"string"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"}},required:["type","label","name"]},{type:"object",description:"Defines a boolean setting on a property",properties:{type:{type:"string",enum:["checkbox"]},default:{type:"boolean"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"}},required:["type","label","name"]},{type:"object",description:"Defines a setting with a fixed set of choices",properties:{type:{type:"string",enum:["select"]},default:{type:"string"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"},choices:{type:"array",items:{type:"object",properties:{value:{type:"string"},name:{type:"string"}},required:["value","name"]}}},required:["type","label","name","choices"]}]}}}}},required:["name","identifierSpace","schemaSpace"]},"reconciliation-query-batch":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/reconciliation-query.json",type:"object",description:"This schema validates the JSON serialization of any reconciliation query batch, i.e. the payload of a GET/POST to a reconciliation endpoint.",definitions:{property_value:{oneOf:[{type:"string"},{type:"number"},{type:"boolean"},{type:"object",description:"A property value which represents another entity, for instance if it was previously reconciled itself",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]}]}},patternProperties:{"^.*$":{type:"object",properties:{query:{type:"string",description:"A string to be matched against the name of the entities"},type:{description:"Either a single type identifier or a list of type identifiers",oneOf:[{type:"string"},{type:"array",items:{type:"string"}}]},limit:{type:"number",description:"The maximum number of candidates to return"},properties:{type:"array",description:"An optional list of property mappings to refine the query",items:{type:"object",properties:{pid:{type:"string",description:"The identifier of the property, whose values will be compared to the values supplied"},v:{description:"A value (or array of values) to match against the property values associated with the property on each candidate",oneOf:[{$ref:"#/definitions/property_value"},{type:"array",items:{$ref:"#/definitions/property_value"}}]}},required:["pid","v"]}},type_strict:{type:"string",description:"A classification of the type matching strategy when multiple types are supplied",enum:["any","should","all"]}},required:["query"],additionalProperties:!1}}},"reconciliation-result-batch":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/reconciliation-result-batch.json",type:"object",description:"This schema can be used to validate the JSON\xa0serialization of any reconciliation result batch.",patternProperties:{"^.*$":{type:"object",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Entity identifier of the candidate"},name:{type:"string",description:"Entity name of the candidate"},score:{type:"number",description:"Number indicating how likely it is that the candidate matches the query"},match:{type:"boolean",description:"Boolean value indicating whether the candiate is a certain match or not."},type:{type:"array",description:"Types the candidate entity belongs to",items:{oneOf:[{type:"object",description:"A type can be given by id and name",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]},{type:"string",description:"Alternatively, if only a string is given, it is treated as the id"}]}}},required:["id","name","score"]}}},required:["result"]}}},"suggest-entities-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/suggest-entities-response.json",type:"object",description:"This schema can be used to validate the JSON response of a suggest service for entities.",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Identifier of the suggested entity"},name:{type:"string",description:"Name of the suggested entity"},description:{type:"string",description:"An optional description which can be provided to disambiguate namesakes, providing more context."},notable:{type:"array",description:"Types the suggest entity belongs to",items:{oneOf:[{type:"object",description:"A type can be given by id and name",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]},{type:"string",description:"Alternatively, if only a string is given, it is treated as the id"}]}}},required:["id","name"]}}},required:["result"]},"suggest-properties-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/suggest-properties-response.json",type:"object",description:"This schema can be used to validate the JSON response of a suggest service for properties.",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Identifier of the suggested property"},name:{type:"string",description:"Name of the suggested property"},description:{type:"string",description:"An optional description which can be provided to disambiguate namesakes, providing more context."}},required:["id","name"]}}},required:["result"]},"suggest-types-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/0.1/schemas/suggest-types-response.json",type:"object",description:"This schema can be used to validate the JSON response of a suggest service for types.",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Identifier of the suggested type"},name:{type:"string",description:"Name of the suggested type"},description:{type:"string",description:"An optional description which can be provided to disambiguate namesakes, providing more context."}},required:["id","name"]}}},required:["result"]}},latest:{"data-extension-query":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/data-extension-query.json",type:"object",description:"This schema validates a data extension query",properties:{ids:{type:"array",description:"The list of entity identifiers to fetch property values from",items:{type:"string"}},properties:{type:"array",description:"The list of properties to fetch, with their optional configuration",items:{type:"object",properties:{id:{type:"string"},settings:{type:"object"}},required:["id"]}}},required:["ids","properties"]},"data-extension-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/data-extension-response.json",type:"object",description:"This schema validates a data extension response",properties:{meta:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},type:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]}},required:["id","name"]}},rows:{type:"object",patternProperties:{".*":{type:"object",patternProperties:{".*":{type:"array",items:{oneOf:[{type:"object",additionalProperties:!1},{type:"object",properties:{id:{type:"string"},name:{type:"string"},description:{type:"string"}},required:["id","name"],additionalProperties:!1},{type:"object",properties:{str:{type:"string"}},required:["str"],additionalProperties:!1},{type:"object",properties:{float:{type:"number"}},required:["float"],additionalProperties:!1},{type:"object",properties:{int:{type:"integer"}},required:["int"],additionalProperties:!1},{type:"object",properties:{date:{type:"string",description:"Date and time formatted in ISO format",pattern:"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"}},required:["date"],additionalProperties:!1}]}}}}}}},required:["rows","meta"]},manifest:{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/manifest.json",type:"object",description:"This validates a service manifest, describing the features supported by the endpoint.",properties:{versions:{type:"array",description:"The list of API versions supported by this service.",items:{type:"string"},contains:{enum:["0.2"]}},name:{type:"string",description:"A human-readable name for the service or data source"},identifierSpace:{type:"string",description:"A URI describing the entity identifiers used in this service"},schemaSpace:{type:"string",description:"A URI describing the schema used in this service"},view:{type:"object",properties:{url:{type:"string",description:"A template to transform an entity identifier into the corresponding URI",pattern:".*\\{\\{id\\}\\}.*"}},required:["url"]},feature_view:{type:"object",properties:{url:{type:"string",description:"A template to transform a matching feature identifier into the corresponding URI",pattern:".*\\{\\{id\\}\\}.*"}},required:["url"]},defaultTypes:{type:"array",description:"A list of default types that are considered good generic choices for reconciliation",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},uniqueItems:!0},suggest:{type:"object",description:"Settings for the suggest protocol, to auto-complete entities, properties and types",definitions:{service_definition:{type:"object",properties:{service_url:{type:"string"},service_path:{type:"string"},flyout_service_url:{type:"string"},flyout_service_path:{type:"string",pattern:".*\\$\\{id\\}.*"}},required:[]}},properties:{entity:{$ref:"#/properties/suggest/definitions/service_definition"},property:{$ref:"#/properties/suggest/definitions/service_definition"},type:{$ref:"#/properties/suggest/definitions/service_definition"}}},preview:{type:"object",description:"Settings for the preview protocol, for HTML previews of entities",properties:{url:{type:"string",pattern:".*\\{\\{id\\}\\}.*",description:"A URL pattern which transforms the entity ID into a preview URL for it"},width:{type:"integer",description:"The width of the iframe where to include the HTML preview"},height:{type:"integer",description:"The height of the iframe where to include the HTML preview"}},required:["url","width","height"]},extend:{type:"object",description:"Settings for the data extension protocol, to fetch property values",properties:{propose_properties:{type:"object",description:"Location of the endpoint to propose properties to fetch for a given type",properties:{service_url:{type:"string"},service_path:{type:"string"}}},property_settings:{type:"array",description:"Definition of the settings configurable by the user when fetching a property",items:{oneOf:[{type:"object",description:"Defines a numerical setting on a property",properties:{type:{type:"string",enum:["number"]},default:{type:"number"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"}},required:["type","label","name"]},{type:"object",description:"Defines a string setting on a property",properties:{type:{type:"string",enum:["text"]},default:{type:"string"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"}},required:["type","label","name"]},{type:"object",description:"Defines a boolean setting on a property",properties:{type:{type:"string",enum:["checkbox"]},default:{type:"boolean"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"}},required:["type","label","name"]},{type:"object",description:"Defines a setting with a fixed set of choices",properties:{type:{type:"string",enum:["select"]},default:{type:"string"},label:{type:"string"},name:{type:"string"},help_text:{type:"string"},choices:{type:"array",items:{type:"object",properties:{value:{type:"string"},name:{type:"string"}},required:["value","name"]}}},required:["type","label","name","choices"]}]}}}},serverLimits:{type:"object",description:"Resource constraints imposed by the service on clients",properties:{batchRate:{type:"integer",description:"The number of reconciliation query batch requests which can safely be sent to this service per second per IP address."},maxConnections:{type:"integer",description:"The number of TCP connections which can be concurrently kept open from a single IP address."}}}},required:["versions","name","identifierSpace","schemaSpace"]},"reconciliation-query-batch":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/reconciliation-query.json",type:"object",description:"This schema validates the JSON serialization of any reconciliation query batch, i.e. the payload of a GET/POST to a reconciliation endpoint.",definitions:{property_value:{oneOf:[{type:"string"},{type:"number"},{type:"boolean"},{type:"object",description:"A property value which represents another entity, for instance if it was previously reconciled itself",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]}]}},patternProperties:{"^.*$":{type:"object",properties:{query:{type:"string",description:"A string to be matched against the name of the entities"},type:{description:"Either a single type identifier or a list of type identifiers",oneOf:[{type:"string"},{type:"array",items:{type:"string"}}]},limit:{type:"number",description:"The maximum number of candidates to return"},properties:{type:"array",description:"An optional list of property mappings to refine the query",items:{type:"object",properties:{pid:{type:"string",description:"The identifier of the property, whose values will be compared to the values supplied"},v:{description:"A value (or array of values) to match against the property values associated with the property on each candidate",oneOf:[{$ref:"#/definitions/property_value"},{type:"array",items:{$ref:"#/definitions/property_value"}}]}},required:["pid","v"]}},type_strict:{type:"string",description:"A classification of the type matching strategy when multiple types are supplied",enum:["any","should","all"]}},required:["query"],additionalProperties:!1}}},"reconciliation-result-batch":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/reconciliation-result-batch.json",type:"object",description:"This schema can be used to validate the JSON\xa0serialization of any reconciliation result batch.",patternProperties:{"^.*$":{type:"object",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Entity identifier of the candidate"},name:{type:"string",description:"Entity name of the candidate"},description:{type:"string",description:"Optional description of the candidate entity"},score:{type:"number",description:"Number indicating how likely it is that the candidate matches the query"},features:{type:"array",description:"A list of features which can be used to derive a matching score",items:{type:"object",properties:{id:{type:"string",description:"A unique string identifier for the feature"},value:{description:"The value of the feature for this reconciliation candidate",oneOf:[{type:"boolean"},{type:"number"}]}}}},match:{type:"boolean",description:"Boolean value indicating whether the candiate is a certain match or not."},type:{type:"array",description:"Types the candidate entity belongs to",items:{oneOf:[{type:"object",description:"A type can be given by id and name",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]},{type:"string",description:"Alternatively, if only a string is given, it is treated as the id"}]}}},required:["id","name","score"]}}},required:["result"]}}},"suggest-entities-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/suggest-entities-response.json",type:"object",description:"This schema can be used to validate the JSON response of a suggest service for entities.",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Identifier of the suggested entity"},name:{type:"string",description:"Name of the suggested entity"},description:{type:"string",description:"An optional description which can be provided to disambiguate namesakes, providing more context."},notable:{type:"array",description:"Types the suggest entity belongs to",items:{oneOf:[{type:"object",description:"A type can be given by id and name",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]},{type:"string",description:"Alternatively, if only a string is given, it is treated as the id"}]}}},required:["id","name"]}}},required:["result"]},"suggest-properties-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/suggest-properties-response.json",type:"object",description:"This schema can be used to validate the JSON response of a suggest service for properties.",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Identifier of the suggested property"},name:{type:"string",description:"Name of the suggested property"},description:{type:"string",description:"An optional description which can be provided to disambiguate namesakes, providing more context."}},required:["id","name"]}}},required:["result"]},"suggest-types-response":{$schema:"http://json-schema.org/schema#",$id:"https://reconciliation-api.github.io/specs/latest/schemas/suggest-types-response.json",type:"object",description:"This schema can be used to validate the JSON response of a suggest service for types.",properties:{result:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"Identifier of the suggested type"},name:{type:"string",description:"Name of the suggested type"},description:{type:"string",description:"An optional description which can be provided to disambiguate namesakes, providing more context."}},required:["id","name"]}}},required:["result"]}}});q<x.length;q++){for(var _=x[q],N=Object(O.a)(_,2),A=N[0],I=N[1],L={},$=0,D=Object.entries(I);$<D.length;$++){var J=D[$],U=Object(O.a)(J,2),V=U[0],Q=U[1];L[V]=P.compile(Q)}R[A]=L}var M=function(e,t){return R[null===e?"0.1":e][t]},B=function(){function e(t,i,n){Object(o.a)(this,e),this.endpoint=t,this.manifest=i,this.cors=n,this.latestCompatibleVersion=null;var r=!0,a=!1,s=void 0;try{for(var c,p=C[Symbol.iterator]();!(r=(c=p.next()).done);r=!0){var l=c.value;M(l,"manifest")(i)&&(this.latestCompatibleVersion=l)}}catch(u){a=!0,s=u}finally{try{r||null==p.return||p.return()}finally{if(a)throw s}}}return Object(c.a)(e,[{key:"getFetcher",value:function(){return this.cors?j:S}}]),e}(),H=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(p.a)(this,Object(l.a)(t).call(this))).checkJsonp=function(){e.setState({reacheableJSONP:"checking"}),E()(e.props.endpoint).then(function(e){return e.json()}).then(function(t){return e.setState({manifest:t,reacheableJSONP:!0})}).catch(function(t){return e.setState({reacheableJSONP:!1})})},e.triggerOnSelect=function(){e.props.onSelect&&e.props.onSelect(e.reconciliationService())},e.state={reacheableCORS:"checking",reacheableJSONP:"maybe",manifest:{}},e}return Object(u.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){var e=this;fetch(this.props.endpoint,{timeout:5e3}).then(function(e){return e.json()}).then(function(t){return e.setState({manifest:t,reacheableCORS:!0})}).catch(function(t){e.setState({reacheableCORS:!1})}),this.props.jsonp&&this.checkJsonp()}},{key:"suggestSettings",value:function(){return this.state.manifest.suggest||{}}},{key:"hasView",value:function(){return this.isReacheable?"url"in(this.state.manifest.view||{}):null}},{key:"hasSuggestEntity",value:function(){return this.isReacheable?"entity"in this.suggestSettings():null}},{key:"hasSuggestProperty",value:function(){return this.isReacheable?"property"in this.suggestSettings():null}},{key:"hasSuggestType",value:function(){return this.isReacheable?"type"in this.suggestSettings():null}},{key:"hasPreview",value:function(){return this.isReacheable?"preview"in this.state.manifest:null}},{key:"hasExtend",value:function(){return this.isReacheable?"extend"in this.state.manifest:null}},{key:"reconciliationService",value:function(){return new B(this.props.endpoint,this.state.manifest,this.state.reacheableCORS)}},{key:"nameCell",value:function(){var e=[r.a.createElement("span",{key:"name"},this.props.name)];return this.props.documentation&&!this.props.source_url&&e.push(r.a.createElement("span",{key:"docs"}," (",r.a.createElement("a",{href:this.props.documentation,target:"_blank",rel:"noopener noreferrer",title:"Read endpoint documentation"},"docs"),")")),this.props.documentation&&this.props.source_url&&e.push(r.a.createElement("span",{key:"docs"}," (",r.a.createElement("a",{href:this.props.documentation,target:"_blank",rel:"noopener noreferrer",title:"Read endpoint documentation"},"docs"),", ",r.a.createElement("a",{href:this.props.source_url,target:"_blank",rel:"noopener noreferrer",title:"View endpoint source code"},"source"),")")),!this.props.documentation&&this.props.source_url&&e.push(r.a.createElement("span",{key:"docs"}," (",r.a.createElement("a",{href:this.props.source_url,target:"_blank",rel:"noopener noreferrer",title:"View endpoint source code"},"source"),")")),this.props.wd_uri&&e.push(r.a.createElement("span",{key:"wd",style:{float:"right"}},r.a.createElement("a",{href:this.props.wd_uri+"#P6269",target:"_blank",rel:"noopener noreferrer",title:"Edit on Wikidata"},r.a.createElement("span",{className:"glyphicon glyphicon-pencil"})))),e}},{key:"render",value:function(){return r.a.createElement("tr",null,r.a.createElement("td",null,this.nameCell()),r.a.createElement("td",null,r.a.createElement(f.a,{bsStyle:"primary",bsSize:"xsmall",onClick:this.triggerOnSelect,title:"Use in test bench",disabled:!this.isReacheable},r.a.createElement("span",{className:"glyphicon glyphicon-play"}))," ",r.a.createElement("a",{href:this.props.endpoint,target:"_blank",rel:"noopener noreferrer"},this.props.endpoint)),r.a.createElement("td",{className:"featureCell"},this.reconciliationService().latestCompatibleVersion||"?"),r.a.createElement(v,{value:this.state.reacheableCORS}),r.a.createElement(v,{value:this.state.reacheableJSONP,onClick:this.checkJsonp}),r.a.createElement(v,{value:this.hasView()}),r.a.createElement(v,{value:this.hasSuggestEntity()}),r.a.createElement(v,{value:this.hasSuggestType()}),r.a.createElement(v,{value:this.hasSuggestProperty()}),r.a.createElement(v,{value:this.hasPreview()}),r.a.createElement(v,{value:this.hasExtend()}))}},{key:"isReacheable",get:function(){return!0===this.state.reacheableCORS||!0===this.state.reacheableJSONP}}]),t}(r.a.Component),F=function(){function e(t,i,n,r,a){Object(o.a)(this,e),this.endpoint=t,this.name=i,this.documentation=n,this.source_url=r,this.wd_uri=a,this.jsonp=!1}return Object(c.a)(e,[{key:"useJsonp",value:function(){this.jsonp=!0}}]),e}(),W=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(p.a)(this,Object(l.a)(t).call(this))).refreshServicesFromWD=function(t){e.setState({refreshing:!0});var i=new URL("https://query.wikidata.org/sparql"),n={query:e.sparql_query,format:"json"},r=null;if("GET"===t)Object.keys(n).forEach(function(e){return i.searchParams.append(e,n[e])}),r=fetch(i);else{var a=new URLSearchParams;Object.keys(n).forEach(function(e){return a.append(e,n[e])}),r=fetch(i,{method:"POST",mode:"cors",cache:"no-cache",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:a})}r.then(function(e){return e.json()}).then(function(t){return e.setState({services:t.results.bindings.map(function(e){return new F(e.endpoint.value,e.serviceLabel.value,"documentation"in e?e.documentation.value:void 0,"source"in e?e.source.value:void 0,e.service.value)}),refreshing:!1})}).catch(function(t){console.log(t),e.setState({refreshing:!1})})},e.loadAllJsonp=function(){e.setState({services:e.state.services.map(function(e){return e.useJsonp(),e})})},e.openAddServiceDialog=function(){e.setState({showAddServiceDialog:!0})},e.closeAddServiceDialog=function(){e.setState({showAddServiceDialog:!1})},e.state={services:[],showAddServiceDialog:!1,refreshing:!1},e.sparql_query='SELECT ?service ?serviceLabel ?endpoint ?documentation ?source WHERE {\n  ?service p:P6269 ?statement.\n  ?statement ps:P6269 ?endpoint ;\n     pq:P2700 wd:Q64490175.\n  OPTIONAL { ?statement (pq:P973 | pq:P2078) ?documentation }\n  OPTIONAL { ?statement pq:P1324 ?source }\n  FILTER NOT EXISTS { ?statement wikibase:rank wikibase:DeprecatedRank }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}\nORDER BY DESC(?endpoint)\n',e}return Object(u.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){this.refreshServicesFromWD("GET")}},{key:"render",value:function(){var e=this;return r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"Due to ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/JSONP#Security_concerns"},"a security risk inherent to JSONP"),", only endpoints supporting ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing"},"CORS")," are loaded by default. You can click the"," ",r.a.createElement("span",{className:"glyphicon glyphicon-search"})," button in each row to attempt to load the service via ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/JSONP"},"JSONP"),". Note that a malicious endpoint could use JSONP to execute arbitrary JavaScript code in this page. If you trust all the reconciliation services listed here, you can also ",r.a.createElement(f.a,{onClick:this.loadAllJsonp,bsSize:"xsmall"},"load all endpoints via JSONP"),"."),r.a.createElement(d.a,{striped:!0,bordered:!0,hover:!0},r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("td",null,"Name"),r.a.createElement("td",null,"Endpoint"),r.a.createElement("td",null,"API version"),r.a.createElement("td",null,"CORS"),r.a.createElement("td",null,"JSONP"),r.a.createElement("td",null,"View entities"),r.a.createElement("td",null,"Suggest entities"),r.a.createElement("td",null,"Suggest types"),r.a.createElement("td",null,"Suggest properties"),r.a.createElement("td",null,"Preview entities"),r.a.createElement("td",null,"Extend data"))),r.a.createElement("tbody",null,this.state.services.map(function(t){return r.a.createElement(H,{endpoint:t.endpoint,name:t.name,documentation:t.documentation,source_url:t.source_url,wd_uri:t.wd_uri,jsonp:t.jsonp,onSelect:e.props.onSelect,key:t.wd_uri+" "+t.endpoint+(t.jsonp?" jsonp":" cors")})}))),r.a.createElement(f.a,{onClick:this.openAddServiceDialog},r.a.createElement("span",{className:"glyphicon glyphicon-plus"})," Add a service"),"\xa0\xa0\xa0",r.a.createElement(f.a,{onClick:function(){return e.refreshServicesFromWD("POST")},disabled:this.state.refreshing},r.a.createElement("span",{className:"glyphicon glyphicon-refresh"})," ",this.state.refreshing?"Refreshing\u2026":"Refresh table"),r.a.createElement(y.a,{show:this.state.showAddServiceDialog,onHide:this.closeAddServiceDialog},r.a.createElement(y.a.Header,{closeButton:!0},r.a.createElement(y.a.Title,null,"How to add a service to this list")),r.a.createElement(y.a.Body,null,r.a.createElement("p",null,"This list is generated by ",r.a.createElement("a",{href:this.sparqlQueryUrl},"a SPARQL query on Wikidata"),". To add your service to it, follow these steps:"),r.a.createElement("ul",null,r.a.createElement("li",null,"Make sure your service is publicly accessible - local endpoints (such as those with ",r.a.createElement("code",null,"localhost")," or ",r.a.createElement("code",null,"127.0.0.1")," in their address) should not be added to this table."),r.a.createElement("li",null,"Find out if there is already a Wikidata item about your service, your database or your identifier. You can use ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Special:Search?ns0=1"},"Wikidata's search interface")," for that. If there is not, you can ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Special:NewItem"},"create a new one"),"."),r.a.createElement("li",null,"Add a statement on that item, using the ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Property:P6269"},"API endpoint (P6269)")," property, adding the ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Q64490175"},"OpenRefine reconciliation service API (Q64490175)")," as ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Property:P2700"},"protocol (P2700)")," in a qualifier. You can also add a link to the documentation for the endpoint by adding a ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Property:P2078"},"user manual link (P2078)")," or ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Property:P973"},"described at URL (P973)")," qualifier. See ",r.a.createElement("a",{href:"https://www.wikidata.org/wiki/Q922063#P6269"},"this example for how it is done"),"."),r.a.createElement("li",null,"Refresh this table - it might take a few minutes before your service appears in the table.")))))}},{key:"sparqlQueryUrl",get:function(){return"https://query.wikidata.org/#"+encodeURIComponent(this.sparql_query)}}]),t}(r.a.Component),z=i(92),K=i.n(z),G=i(35),Y=i.n(G),Z=i(34),X=i.n(Z),ee=i(17),te=i.n(ee),ie=i(24),ne=i.n(ie),re=i(19),ae=i.n(re),se=i(244),oe=i.n(se),ce=i(7),pe=i.n(ce),le=function(e){function t(){var e,i;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(i=Object(p.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(r)))).state={service:i.props.initialService},i}return Object(u.a)(t,e),Object(c.a)(t,[{key:"componentWillMount",value:function(){this.timer=null}},{key:"setService",value:function(e){this.setState({service:e})}},{key:"handleChange",value:function(e){var t=this;clearTimeout(this.timer),this.setState({service:new B(e.target.value,void 0,void 0),error:void 0}),this.timer=setTimeout(function(){return t.validateEndpoint()},1e3)}},{key:"validateEndpoint",value:function(){var e=this,t=this.state.service.endpoint;fetch(t).then(function(e){return e.json()}).then(function(i){return e._setService(t,i,!0)}).catch(function(i){return E()(t).then(function(e){return e.json()}).then(function(i){return e._setService(t,i,!1)}).catch(function(i){return e._setError(t,i)})})}},{key:"_setService",value:function(e,t,i){if(this.state.service.endpoint===e){var n=new B(e,t,i);this.setState({service:n}),void 0!==this.props.onChange&&this.props.onChange(n)}}},{key:"_setError",value:function(e,t){this.state.service.endpoint===e&&(this.setState({manifest:void 0,error:t}),void 0!==this.props.onChange&&this.props.onChange(void 0,void 0))}},{key:"getValidationState",value:function(){return void 0!==this.state.service&&void 0!==this.state.service.manifest?"success":void 0!==this.state.error?"error":null}},{key:"getMessage",value:function(){var e="";if("error"===this.getValidationState()){e="The endpoint MUST return a JSON document describing the service, accessible v\xeea CORS or JSONP.";var t=this.state.service.endpoint;return void 0===t||!t.startsWith("http://")||t.startsWith("http://localhost")||t.startsWith("http://127.0.0.1")||(e+=" The endpoint SHOULD be available over HTTPS. Depending on your browser, this test bench might not be able to test reconciliation services over HTTP."),e}}},{key:"handleSubmit",value:function(e){clearTimeout(this.timer),this.validateEndpoint(),e.preventDefault()}},{key:"render",value:function(){var e=this;return r.a.createElement(X.a,{horizontal:!0,onSubmit:function(t){return e.handleSubmit(t)}},r.a.createElement(te.a,{controlId:"endpointField",validationState:this.getValidationState()},r.a.createElement(pe.a,{componentClass:ae.a,sm:1},"Endpoint:"),r.a.createElement(pe.a,{sm:11},r.a.createElement(ne.a,{type:"text",value:this.state.service.endpoint,placeholder:"URL of the reconciliation service endpoint",onChange:function(t){return e.handleChange(t)}}),r.a.createElement(ne.a.Feedback,null),r.a.createElement(oe.a,null,this.getMessage()))))}}]),t}(r.a.Component),ue=i(146),he=i.n(ue),de=i(29),me=i.n(de),ye=i(93),ge=i.n(ye),fe=i(91),ve=i.n(fe),be=i(245),Ee=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(p.a)(this,Object(l.a)(t).call(this))).onSuggestionsFetchRequested=function(t){var i=e.getUrl(),n={prefix:t};null!==i&&(e.setState({isLoading:!0}),e.props.service.getFetcher()(i,n).then(function(e){return e.json()}).then(function(t){e.setState({suggestions:t.result,isLoading:!1})}).catch(function(t){console.log(t),e.setState({isLoading:!1})}))},e.onSuggestionsClearRequested=function(){e.setState({suggestions:[]})},e.onChange=function(t){void 0===e.props.onChange?e.setState({value:t[0]}):e.props.onChange(t[0])},e.state={value:void 0,suggestions:[],isLoading:!1},e}return Object(u.a)(t,e),Object(c.a)(t,[{key:"getValue",value:function(){return void 0!==this.props.onChange?this.props.value:this.state.value}},{key:"getUrl",value:function(){if(!this.manifest||!this.manifest.suggest)return null;var e=this.manifest.suggest[this.props.entityClass];return e?e.service_url+e.service_path:null}},{key:"render",value:function(){return r.a.createElement(be.AsyncTypeahead,{id:this.props.id,disabled:null===this.getUrl(),isLoading:this.state.isLoading,onSearch:this.onSuggestionsFetchRequested,options:this.state.suggestions,labelKey:"name",filterBy:function(e,t){return!0},selected:this.getValue()?[this.getValue()]:[],onChange:this.onChange,renderMenuItemChildren:function(e,t,i){return r.a.createElement(r.a.Fragment,null,r.a.createElement("span",{className:"suggestItemId"},e.id),Array.isArray(e.broader)&&e.broader.length&&r.a.createElement("span",{className:"suggestItemId"},e.broader.map(function(e){return e.id}).join(", ")," > "),r.a.createElement("span",{className:"suggestItemLabel"},e.name),r.a.createElement("br",null),r.a.createElement("span",{className:"suggestItemDescription"},e.description))}})}},{key:"manifest",get:function(){return this.props.service?this.props.service.manifest:null}}]),t}(r.a.Component),we=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(p.a)(this,Object(l.a)(t).call(this))).onSuggestChange=function(t){e.setState({value:t}),void 0!==e.props.onChange&&e.props.onChange(t)},e.onIdChange=function(t){var i={id:t.currentTarget.value,name:t.currentTarget.value};void 0===e.props.onChange?e.setState({value:i}):void 0===e.props.explicitSubmit?e.props.onChange(i):e.setState({value:i})},e.onSubmit=function(t){e.props.onChange(e.state.value),t.preventDefault()},e.state={value:void 0},e}return Object(u.a)(t,e),Object(c.a)(t,[{key:"getValue",value:function(){return void 0!==this.props.onChange?this.props.value:this.state.value}},{key:"render",value:function(){return this.hasAutocomplete?r.a.createElement(Ee,{service:this.props.service,entityClass:this.props.entityClass,onChange:this.onSuggestChange,value:this.currentValue}):void 0!==this.props.explicitSubmit?r.a.createElement(me.a,null,r.a.createElement(ne.a,{type:"text",placeholder:this.placeholder,value:this.currentId||"",onChange:this.onIdChange}),r.a.createElement(me.a.Button,null,r.a.createElement(f.a,{onClick:this.onSubmit,type:"submit",bsStyle:"primary"},"Submit"))):r.a.createElement(ne.a,{type:"text",placeholder:this.placeholder,value:this.currentId||"",onChange:this.onIdChange})}},{key:"manifest",get:function(){return this.props.service?this.props.service.manifest:null}},{key:"placeholder",get:function(){return this.props.entityClass+" id"}},{key:"currentValue",get:function(){return void 0===this.props.onChange?this.state.value:this.props.value||this.state.value}},{key:"currentId",get:function(){var e=this.currentValue;return void 0===e?void 0:e.id}},{key:"hasAutocomplete",get:function(){return this.manifest&&this.manifest.suggest&&this.manifest.suggest[this.props.entityClass]}}]),t}(r.a.Component),Se=function(e){function t(){var e,i;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(i=Object(p.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(r)))).newMapping=function(){i.emitChange(i.props.value.concat([{property:void 0,value:""}]))},i.deleteMapping=function(e){var t=i.props.value.slice();t.splice(e,1),i.emitChange(t)},i.onValueChange=function(e,t){var n=i.props.value.slice(),r=n[e].property;n[e]={property:r,value:t.currentTarget.value},i.emitChange(n)},i.onPropertyChange=function(e,t){console.log("new property value"),console.log(e),console.log(t);var n=i.props.value.slice(),r=n[e].value;n[e]={property:t,value:r},console.log(n),i.emitChange(n)},i}return Object(u.a)(t,e),Object(c.a)(t,[{key:"emitChange",value:function(e){this.props.onChange&&this.props.onChange(e)}},{key:"renderMappings",value:function(){var e=this;return this.props.value.map(function(t,i){return r.a.createElement("div",{style:{display:"inline-block",marginBottom:"5px"},key:i},r.a.createElement("div",{style:{display:"inline-block",width:"45%"}},r.a.createElement(we,{service:e.props.service,entityClass:"property",id:"mapping-property-"+i,value:t.property,onChange:function(t){return e.onPropertyChange(i,t)}})),r.a.createElement("div",{style:{display:"inline-block",width:"45%"}},r.a.createElement(ne.a,{type:"text",placeholder:"Type a value",value:t.value||"",onChange:function(t){return e.onValueChange(i,t)}})),r.a.createElement(f.a,{bsStyle:"primary",bsSize:"xsmall",onClick:function(){return e.deleteMapping(i)},title:"delete property"},r.a.createElement("span",{className:"glyphicon glyphicon-trash"})))})}},{key:"render",value:function(){return r.a.createElement("div",null,this.renderMappings(),r.a.createElement("br",null),r.a.createElement(f.a,{onClick:this.newMapping},"Add property"))}}]),t}(r.a.Component),je=i(246),ke=i.n(je),Ce=i(63),Oe=i.n(Ce),Te=function(e){function t(){return Object(o.a)(this,t),Object(p.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(c.a)(t,[{key:"renderDescription",value:function(){var e=this.props.candidate.description;return void 0!==e?r.a.createElement("span",null,r.a.createElement("br",null),e):r.a.createElement("span",null)}},{key:"renderTypes",value:function(){var e=this.props.candidate.type;if(void 0!==e)return r.a.createElement("span",null,r.a.createElement("br",null),e.map(function(e,t){return[t>0&&", ",e.name+" ("+e.id+")"]}))}},{key:"render",value:function(){var e=this.props.candidate;return r.a.createElement(Oe.a,{key:e.id,header:e.name,active:e.match},r.a.createElement("a",{href:this.url},e.id),r.a.createElement(ke.a,{style:{float:"right"}},this.props.candidate.score),this.renderDescription(),this.renderTypes())}},{key:"url",get:function(){var e=null;return"view"in this.props.manifest&&"url"in this.props.manifest.view&&"id"in this.props.candidate&&(e=this.props.manifest.view.url.replace("{{id}}",this.props.candidate.id)),e}}]),t}(r.a.Component),Pe=function(e){function t(){var e,i;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(i=Object(p.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(r)))).iframe=function(){var e=this.props.settings.url.replace("{{id}}",encodeURIComponent(this.props.id));if(!Number.isInteger(this.props.settings.height)||!Number.isInteger(this.props.settings.width))return{__html:"<p>The manifest must provide the width and height of the preview iframe as integers.</p>"};try{return new URL(e),{__html:'<iframe src="'.concat(e,'" height="').concat(this.props.settings.height,'" width="').concat(this.props.settings.width,'" scrolling="no"></iframe>')}}catch(t){return{__html:"<p>Invalid URL generated by the preview service URL template.</p>"}}},i}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement("div",null,void 0===this.props.id?r.a.createElement("div",null):r.a.createElement("div",{dangerouslySetInnerHTML:this.iframe()}))}}]),t}(r.a.Component),Re=function(e){function t(){return Object(o.a)(this,t),Object(p.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement(Oe.a,{key:this.props.key,header:this.renderedValue},this.datatype)}},{key:"renderedValue",get:function(){var e=this.props.value;return void 0!==e.date?e.date:void 0!==e.id&&void 0!==e.name?e.name:void 0!==e.str?e.str:void 0!==e.float?e.float:void 0!==e.int?e.int:"Singleton"}},{key:"datatype",get:function(){var e=this.props.value;return void 0!==e.date?"date":void 0!==e.id&&void 0!==e.name?e.id:void 0!==e.str?"string":void 0!==e.float?"floating-point number":void 0!==e.int?"integer":"empty"}}]),t}(r.a.Component),qe=i(90),xe=i.n(qe),_e=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(p.a)(this,Object(l.a)(t).call(this))).onEntityChange=function(t){e.setState({entity:t,extendResults:void 0,validationErrors:[]})},e.onPropertyChange=function(t){e.setState({property:t,extendResults:void 0,validationErrors:[]})},e.resetQuery=function(t){t.preventDefault(),e.setState({entity:void 0,property:void 0,extendResults:void 0,validationErrors:void 0})},e.submitQuery=function(t){t.preventDefault(),e.setState({extendResults:"fetching"}),e.props.service.getFetcher()(e.formulateQueryUrl(),{timeout:2e4}).then(function(e){return e.json()}).then(function(t){return e.setState({extendResults:t,validationErrors:e.validateServiceResponse(t)})}).catch(function(t){e.setState({exdentResults:"failed",extendError:t.message})})},e.state={entity:void 0,property:void 0,extendResults:void 0,validationErrors:[]},e}return Object(u.a)(t,e),Object(c.a)(t,[{key:"formulateQuery",value:function(){return void 0!==this.state.entity&&void 0!==this.state.property?{ids:[this.state.entity.id],properties:[{id:this.state.property.id}]}:{}}},{key:"formulateQueryUrl",value:function(){var e=this.props.service.endpoint;if(!e)return"#";var t={extend:JSON.stringify(this.formulateQuery())},i=new URL(e);return Object.keys(t).forEach(function(e){return i.searchParams.append(e,t[e])}),i.toString()}},{key:"renderResponseValidationErrors",value:function(){return r.a.createElement("div",null)}},{key:"renderQueryResults",value:function(){if("fetching"===this.state.extendResults)return r.a.createElement("div",{className:"resultsPlaceholder"},"Querying the service...");if("failed"===this.state.extendResults)return r.a.createElement("div",{className:"resultsPlaceholder"},"Error: ",this.state.extendError);if(void 0===this.state.extendResults||void 0===this.state.entity||void 0===this.state.property)return r.a.createElement("div",null);if(void 0===this.state.extendResults.rows)return r.a.createElement("span",{className:"resultsPlaceholder"},"No ",r.a.createElement("code",null,"rows")," attribute in the response.");if(void 0===this.state.extendResults.rows[this.state.entity.id])return r.a.createElement("span",{className:"resultsPlaceholder"},"Missing ",r.a.createElement("code",null,"rows.",this.state.entity.id)," object in the response.");if(void 0===this.state.extendResults.rows[this.state.entity.id][this.state.property.id])return r.a.createElement("span",{className:"resultsPlaceholder"},"Missing ",r.a.createElement("code",null,"rows.",this.state.entity.id,this.state.property.id)," object in the response.");var e=this.state.extendResults.rows[this.state.entity.id][this.state.property.id];return 0===e.length?r.a.createElement("span",{className:"noResults"},"No results"):r.a.createElement(ve.a,null,e.map(function(e,t){return r.a.createElement(Re,{value:e,key:"data-extension-result-"+t})}))}},{key:"validateServiceResponse",value:function(e){var t=M(this.props.service.latestCompatibleVersion,"data-extension-response");return t(e)?[]:t.errors.map(function(e){return e.dataPath+" "+e.message})}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement(pe.a,{sm:5},r.a.createElement(X.a,{horizontal:!0},r.a.createElement(te.a,{controlId:"dataExtensionEntity"},r.a.createElement(pe.a,{componentClass:ae.a,sm:2},"Entity:"),r.a.createElement(pe.a,{sm:10},r.a.createElement(we,{service:this.props.service,placeholder:"Entity to fetch data from",value:this.state.entity,entityClass:"entity",onChange:this.onEntityChange}))),r.a.createElement(te.a,{controlId:"dataExtensionProperty"},r.a.createElement(pe.a,{componentClass:ae.a,sm:2},"Property:"),r.a.createElement(pe.a,{sm:10},r.a.createElement(we,{service:this.props.service,placeholder:"Property to fetch on the entity",value:this.state.property,entityClass:"property",onChange:this.onPropertyChange}))),r.a.createElement(te.a,{controlId:"submitGroup"},r.a.createElement(pe.a,{sm:10}),r.a.createElement(pe.a,{sm:2},r.a.createElement(me.a,null,r.a.createElement(me.a.Button,null,r.a.createElement(f.a,{onClick:this.resetQuery,type:"submit",bsStyle:"default"},"Reset")),r.a.createElement(me.a.Button,null,r.a.createElement(f.a,{onClick:this.submitQuery,type:"submit",bsStyle:"primary"},"Submit"))))))),r.a.createElement(pe.a,{sm:3},r.a.createElement(xe.a,{theme:k,data:this.formulateQuery(),getItemString:function(e,t,i,n){return""},shouldExpandNode:function(e,t,i){return!0},hideRoot:!0}),r.a.createElement("br",null),r.a.createElement("a",{href:this.formulateQueryUrl(),title:"See query results on the service",target:"_blank",rel:"noopener noreferrer"},"View query results on the service"),this.renderResponseValidationErrors()),r.a.createElement(pe.a,{sm:4},this.renderQueryResults()))}}]),t}(r.a.Component),Ne=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(p.a)(this,Object(l.a)(t).call(this))).onReconQueryChange=function(t){e.setState({reconQuery:t.currentTarget.value})},e.onReconTypeChange=function(t){e.setState({reconType:t.currentTarget.value})},e.onCustomTypeChange=function(t){e.setState({reconCustomType:t})},e.onReconPropertiesChange=function(t){e.setState({reconProperties:t})},e.onReconLimitChange=function(t){e.setState({reconLimit:t.currentTarget.value})},e.onPreviewEntityChange=function(t){e.setState({previewEntityId:void 0!==t?t.id:void 0})},e.onSubmitReconciliation=function(t){(t.preventDefault(),e.props.service&&e.props.service.endpoint)&&(e.setState({reconResults:"fetching"}),e.props.service.getFetcher()(e.formulateQueryUrl(),{timeout:2e4}).then(function(e){return e.json()}).then(function(t){return e.setState({reconResults:t.q0.result,reconResponseValidationErrors:e.validateServiceResponse("reconciliation-result-batch",t)})}).catch(function(t){e.setState({reconError:t.message,reconResults:"failed"})}))},e.state={reconQuery:"",reconType:"no-type",reconCustomType:void 0,reconProperties:[],reconLimit:void 0,reconResponseValidationErrors:[],previewEntityId:void 0},e}return Object(u.a)(t,e),Object(c.a)(t,[{key:"validateServiceResponse",value:function(e,t){var i=M(this.props.service.latestCompatibleVersion,e);return i(t)?[]:i.errors.map(function(e){return e.dataPath+" "+e.message})}},{key:"renderQueryResults",value:function(){var e=this;return"fetching"===this.state.reconResults?r.a.createElement("div",{className:"resultsPlaceholder"},"Querying the service..."):"failed"===this.state.reconResults?r.a.createElement("div",{className:"resultsPlaceholder"},"Error: ",this.state.reconError):void 0===this.state.reconResults?r.a.createElement("div",null):0===this.state.reconResults.length?r.a.createElement("span",{className:"noResults"},"No results"):r.a.createElement(ve.a,null,this.state.reconResults.map(function(t){return r.a.createElement(Te,{candidate:t,manifest:e.props.service.manifest})}))}},{key:"renderReconResponseValidationErrors",value:function(){return 0===this.state.reconResponseValidationErrors.length?r.a.createElement("div",null):r.a.createElement(he.a,{bsStyle:"warning"},r.a.createElement("strong",null,"Validations error for reconcilation response"),r.a.createElement("ul",null,this.state.reconResponseValidationErrors.map(function(e,t){return r.a.createElement("li",{key:t},e)})))}},{key:"renderManifestValidationErrors",value:function(){var e=this.props.service.manifest,t=this.validateServiceResponse("manifest",e);return 0===t.length?r.a.createElement("div",null):r.a.createElement(he.a,{bsStyle:"warning"},r.a.createElement("strong",null,"Validation errors for service manifest"),r.a.createElement("ul",null,t.map(function(e,t){return r.a.createElement("li",{key:t},e)})))}},{key:"formulateReconQuery",value:function(){var e={query:this.state.reconQuery};return"custom-type"===this.state.reconType&&void 0!==this.state.reconCustomType?e.type=this.state.reconCustomType.id:"no-type"!==this.state.reconType&&(e.type=this.state.reconType),this.state.reconProperties.length>0&&(e.properties=this.state.reconProperties.filter(function(e){return void 0!==e&&e.property&&e.value}).map(function(e){return{pid:e.property.id,v:e.value}})),isNaN(parseInt(this.state.reconLimit))||(e.limit=parseInt(this.state.reconLimit)),e}},{key:"formulateQueryUrl",value:function(){var e=this.props.service.endpoint;if(!e)return"#";var t={queries:JSON.stringify({q0:this.formulateReconQuery()})},i=new URL(e);return Object.keys(t).forEach(function(e){return i.searchParams.append(e,t[e])}),i.toString()}},{key:"renderTypeChoices",value:function(){var e=this,t=this.state.reconType,i=this.defaultTypes.map(function(i){return r.a.createElement(ge.a,{name:"reconcileType",key:"key_"+i.id,value:i.id,checked:t===i.id,onChange:e.onReconTypeChange},i.name,r.a.createElement("br",null),Array.isArray(i.broader)&&i.broader.length&&r.a.createElement("span",{className:"reconTypeId"},i.broader.map(function(e){return e.id}).join(", ")," > "),r.a.createElement("span",{className:"reconTypeId"},i.id))});return this.hasTypeSuggest&&i.push(r.a.createElement(ge.a,{name:"reconcileType",key:"custom-type",value:"custom-type",checked:"custom-type"===t,onChange:this.onReconTypeChange},"Custom:",r.a.createElement("div",null,r.a.createElement(Ee,{service:this.props.service,entityClass:"type",id:"recon-custom-type-suggest",value:this.state.reconCustomType,onChange:this.onCustomTypeChange})))),i.push(r.a.createElement(ge.a,{name:"reconcileType",key:"no-type",value:"no-type",checked:"no-type"===t,onChange:this.onReconTypeChange},"Reconcile against no particular type")),i}},{key:"render",value:function(){var e=this;return r.a.createElement("div",null,this.renderManifestValidationErrors(),r.a.createElement(K.a,{defaultActiveKey:"reconcile",animation:!1,id:"test-bench-tabs"},r.a.createElement(Y.a,{eventKey:"reconcile",title:"Reconcile"},r.a.createElement("div",{className:"tabContent"},r.a.createElement(pe.a,{sm:5},r.a.createElement(X.a,{horizontal:!0},r.a.createElement(te.a,{controlId:"reconcileName"},r.a.createElement(pe.a,{componentClass:ae.a,sm:2},"Name:"),r.a.createElement(pe.a,{sm:10},r.a.createElement(me.a,null,r.a.createElement(ne.a,{type:"text",placeholder:"Entity to reconcile",value:this.state.reconQuery,onChange:this.onReconQueryChange}),r.a.createElement(me.a.Button,null,r.a.createElement(f.a,{onClick:this.onSubmitReconciliation,type:"submit",bsStyle:"primary",disabled:!this.props.service},"Reconcile"))))),r.a.createElement(te.a,{controlId:"reconcileType"},r.a.createElement(pe.a,{componentClass:ae.a,sm:2},"Type:"),r.a.createElement(pe.a,{sm:10},this.renderTypeChoices())),r.a.createElement(te.a,{controlId:"reconcileProperties"},r.a.createElement(pe.a,{componentClass:ae.a,sm:2},"Properties:"),r.a.createElement(pe.a,{sm:10},r.a.createElement(Se,{service:this.props.service,value:this.state.reconProperties,onChange:this.onReconPropertiesChange}))),r.a.createElement(te.a,{controlId:"reconcileLimit"},r.a.createElement(pe.a,{componentClass:ae.a,sm:2},"Limit:"),r.a.createElement(pe.a,{sm:10},r.a.createElement(ne.a,{type:"number",placeholder:"Maximum number of candidates",value:this.state.reconLimit,onChange:function(t){return e.onReconLimitChange(t)}}))))),r.a.createElement(pe.a,{sm:3},r.a.createElement(xe.a,{theme:k,data:this.formulateReconQuery(),getItemString:function(e,t,i,n){return""},shouldExpandNode:function(e,t,i){return!0},hideRoot:!0}),r.a.createElement("br",null),r.a.createElement("a",{href:this.formulateQueryUrl(),title:"See query results on the service",target:"_blank",rel:"noopener noreferrer"},"View query results on the service"),this.renderReconResponseValidationErrors()),r.a.createElement(pe.a,{sm:4},this.renderQueryResults()))),r.a.createElement(Y.a,{eventKey:"suggest",title:"Suggest"},r.a.createElement("div",{className:"tabContent"},r.a.createElement(X.a,{horizontal:!0},r.a.createElement(te.a,{controlId:"suggestEntityTestBench"},r.a.createElement(pe.a,{componentClass:ae.a,sm:1},"Entity:"),r.a.createElement(pe.a,{sm:11},r.a.createElement(Ee,{service:this.props.service,entityClass:"entity",id:"entity-suggest-test"}))),r.a.createElement(te.a,{controlId:"suggestTypeTestBench"},r.a.createElement(pe.a,{componentClass:ae.a,sm:1},"Type:"),r.a.createElement(pe.a,{sm:11},r.a.createElement(Ee,{service:this.props.service,entityClass:"type",id:"type-suggest-test"}))),r.a.createElement(te.a,{controlId:"suggestPropertyTestBench"},r.a.createElement(pe.a,{componentClass:ae.a,sm:1},"Property:"),r.a.createElement(pe.a,{sm:11},r.a.createElement(Ee,{service:this.props.service,entityClass:"property",id:"property-suggest-test"})))))),r.a.createElement(Y.a,{eventKey:"preview",title:"Preview",disabled:!this.hasPreviewService},r.a.createElement("div",{className:"tabContent"},this.hasPreviewService?r.a.createElement("div",null,r.a.createElement(X.a,{horizontal:!0},r.a.createElement(te.a,{controlId:"suggestEntityTestBench"},r.a.createElement(pe.a,{componentClass:ae.a,sm:1},"Entity:"),r.a.createElement(pe.a,{sm:11},r.a.createElement(we,{service:this.props.service,entityClass:"entity",id:"entity-input-preview",explicitSubmit:!0,onChange:this.onPreviewEntityChange})))),r.a.createElement(Pe,{id:this.state.previewEntityId,settings:this.props.service.manifest.preview})):r.a.createElement("p",null,"Previewing is not supported by the service."))),r.a.createElement(Y.a,{eventKey:"extend",title:"Extend",disabled:!this.hasDataExtension},r.a.createElement("div",{className:"tabContent"},this.hasDataExtension?r.a.createElement(_e,{service:this.props.service}):r.a.createElement("p",null,"Data extension is not supported by the service.")))))}},{key:"defaultTypes",get:function(){return this.props.service&&this.props.service.manifest&&this.props.service.manifest.defaultTypes||[]}},{key:"hasTypeSuggest",get:function(){return this.props.service&&this.props.service.manifest&&this.props.service.manifest.suggest&&this.props.service.manifest.suggest.type}},{key:"hasPropertySuggest",get:function(){return this.props.service&&this.props.service.manifest&&this.props.service.manifest.suggest&&this.props.service.manifest.suggest.property}},{key:"hasPreviewService",get:function(){return this.props.service&&this.props.service.manifest&&this.props.service.manifest.preview}},{key:"hasDataExtension",get:function(){return this.props.service&&this.props.service.manifest&&this.props.service.manifest.extend}}]),t}(r.a.Component),Ae=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(p.a)(this,Object(l.a)(t).call(this))).onEndpointSelect=function(t){e.setState({service:t,selectedEndpoint:t.endpoint,openTab:"testBench"})},e.onEndpointChange=function(t){e.setState({service:t})},e.handleTabSelect=function(t){e.setState({openTab:t})},e.state={selectedEndpoint:"",service:{},openTab:"servicesList"},e}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e=r.a.createElement("div",null);return this.state.service&&this.state.service.endpoint&&(e=r.a.createElement(Ne,{service:this.state.service,key:"testbench-"+this.state.service.endpoint})),r.a.createElement("div",{className:"App",style:{margin:"20px"}},r.a.createElement("h1",null,"Reconciliation service test bench"),r.a.createElement("p",{style:{float:"right"}},r.a.createElement("a",{href:"https://github.com/reconciliation-api/testbench"},"Source repository")),r.a.createElement(K.a,{activeKey:this.state.openTab,onSelect:this.handleTabSelect,animation:!1,id:"main-tabs"},r.a.createElement(Y.a,{eventKey:"servicesList",title:"Services"},r.a.createElement("div",{className:"tabContent"},r.a.createElement("p",null,"This table lists reconciliation services known to ",r.a.createElement("a",{href:"https://www.wikidata.org/"},"Wikidata")," and indicates which features of the ",r.a.createElement("a",{href:"https://reconciliation-api.github.io/specs/latest/"},"reconciliation API")," they support. See also our ",r.a.createElement("a",{href:"https://reconciliation-api.github.io/census/"},"census")," which lists client and server software that use the API."),r.a.createElement("p",null,'If you are viewing this app over HTTPS it is likely that reconciliation services using HTTP are blocked as "mixed content". You can disable this protection in your browser to load HTTP reconciliation services.'),r.a.createElement(W,{onSelect:this.onEndpointSelect},r.a.createElement(H,{name:"OpenCorporates",endpoint:"https://opencorporates.com/reconcile",documentation:"https://api.opencorporates.com/documentation/Open-Refine-Reconciliation-API"})))),r.a.createElement(Y.a,{eventKey:"testBench",title:"Test bench"},r.a.createElement("div",{className:"tabContent"},r.a.createElement("p",null,"This form lets you test a reconciliation endpoint interactively."),r.a.createElement(le,{onChange:this.onEndpointChange,initialService:this.state.service,key:this.state.selectedEndpoint}),e))))}}]),t}(r.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(Ae,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[247,1,2]]]);
//# sourceMappingURL=main.b33ca267.chunk.js.map