{"version":3,"sources":["FeatureCell.js","utils.js","ReconciliationService.js","FeatureRow.js","FeatureTable.js","ReconciliationServiceInput.js","ReconcileSuggest.js","PropertyMapping.js","Candidate.js","TestBench.js","App.js","serviceWorker.js","index.js"],"names":["FeatureCell","glyph","text","color","cellClass","this","props","value","span","react_default","a","createElement","className","sr-only","style","link","onClick","Button_default","bsStyle","bsSize","title","React","Component","addParams","baseUrl","params","url","URL","Object","keys","forEach","key","searchParams","append","toString","fetchJsonpParams","fetchJsonp","timeout","fetchParams","fetch","ReconciliationService","endpoint","manifest","cors","classCallCheck","FeatureRow","_this","possibleConstructorReturn","getPrototypeOf","call","checkJsonp","setState","reacheableJSONP","then","response","json","catch","error","triggerOnSelect","onSelect","state","reacheableCORS","_this2","jsonp","suggest","isReacheable","view","suggestSettings","parts","name","documentation","source_url","push","href","target","rel","wd_uri","float","nameCell","disabled","FeatureCell_FeatureCell","hasView","hasSuggestEntity","hasSuggestType","hasSuggestProperty","hasPreview","hasExtend","Row","FeatureTable","refreshServicesFromWD","method","refreshing","query","sparql_query","format","promise","urlParams","URLSearchParams","mode","cache","headers","Content-Type","body","result","services","results","bindings","map","entry","serviceLabel","undefined","source","service","console","log","loadAllJsonp","row","useJsonp","openAddServiceDialog","showAddServiceDialog","closeAddServiceDialog","Fragment","Table_default","striped","bordered","hover","FeatureRow_FeatureRow","Modal_default","show","onHide","Header","closeButton","Title","Body","sparqlQueryUrl","encodeURIComponent","ReconciliationServiceInput","initialService","timer","e","clearTimeout","setTimeout","validateEndpoint","_this3","_setService","_setError","onChange","message","getValidationState","startsWith","preventDefault","_this4","Form_default","horizontal","onSubmit","handleSubmit","FormGroup_default","controlId","validationState","Col_default","componentClass","ControlLabel","sm","FormControl_default","type","placeholder","handleChange","Feedback","HelpBlock_default","getMessage","ReconcileSuggest","onSuggestionsFetchRequested","getUrl","prefix","isLoading","getFetcher","fetcher","suggestions","onSuggestionsClearRequested","newValue","configuration","entityClass","service_url","service_path","lib","id","onSearch","options","labelKey","filterBy","option","selected","getValue","renderMenuItemChildren","index","description","PropertyMapping","newMapping","emitChange","concat","property","deleteMapping","idx","newArray","slice","splice","onValueChange","currentTarget","onPropertyChange","propertyValue","mapping","display","marginBottom","width","ReconcileSuggest_ReconcileSuggest","v","renderMappings","Candidate","candidate","ListGroupItem_default","header","active","match","Badge_default","score","replace","TestBench","onReconQueryChange","reconQuery","onReconTypeChange","reconType","onCustomTypeChange","reconCustomType","onReconPropertiesChange","values","reconProperties","onReconLimitChange","reconLimit","onSubmitReconciliation","reconResults","formulateQueryUrl","q0","reconError","length","ListGroup_default","Candidate_Candidate","properties","filter","m","pid","isNaN","parseInt","limit","queries","JSON","stringify","formulateReconQuery","current","choices","defaultTypes","t","Radio_default","checked","hasTypeSuggest","Tabs_default","defaultActiveKey","animation","Tab_default","eventKey","InputGroup_default","Button","renderTypeChoices","hasPropertySuggest","PropertyMapping_PropertyMapping","react_json_tree_lib_default","theme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","data","getItemString","itemType","itemString","shouldExpandNode","keyName","level","hideRoot","renderQueryResults","App","onEndpointSelect","selectedEndpoint","openTab","onEndpointChange","handleTabSelect","testBench","TestBench_TestBench","margin","activeKey","FeatureTable_FeatureTable","ReconciliationServiceInput_ReconciliationServiceInput","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adfc18d4.chunk.js","sourcesContent":["\nimport React from 'react';\nimport Button from 'react-bootstrap/lib/Button';\n\nexport default class FeatureCell extends React.Component {\n   render() {\n      let glyph = '';\n      let text = '';\n      let color = 'inherit';\n      let cellClass = 'featureCell-default';\n      if (this.props.value === true) {\n        glyph = 'glyphicon glyphicon-ok';\n        text = 'available';\n        color = 'green';\n        cellClass = 'featureCell-green';\n      } else if (this.props.value === false) {\n        glyph = 'glyphicon glyphicon-remove';\n        text = 'unavailable';\n        color = '#c00000';\n        cellClass = 'featureCell-red';\n      } else if (this.props.value === 'checking') {\n        glyph = 'glyphicon glyphicon-hourglass';\n        text = 'fetching...';\n      } else if (this.props.value === 'maybe') {\n        glyph = 'glyphicon glyphicon-search';\n        text = 'Not reachable via CORS, click to check via JSONP';\n        cellClass = 'featureCell-yellow';\n      }\n      let span = <span className={glyph} sr-only={text} style={{color: color}}></span>;\n      let link = span;\n      if (this.props.onClick && this.props.value === 'maybe') {\n         link = <Button onClick={this.props.onClick} bsStyle=\"warning\" bsSize=\"xsmall\" title=\"Check with JSONP\">{span}</Button>\n      }\n      return (\n        <td className={'featureCell '+cellClass}>\n           {link}\n        </td>\n      );\n   }\n}\n","\nimport fetchJsonp from 'fetch-jsonp';\n\nconst addParams = (baseUrl, params) => {\n   let url = new URL(baseUrl);\n   if (params) {\n      Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n   }\n   return url.toString();\n}\n\nexport const fetchJsonpParams = (baseUrl, params) => {\n   return fetchJsonp(addParams(baseUrl, params), {timeout: 20000});\n} \n\nexport const fetchParams = (baseUrl, params) => {\n   return fetch(addParams(baseUrl, params));\n}\n\n","\nimport { fetchJsonpParams, fetchParams } from './utils.js';\n\nexport default class ReconciliationService {\n    constructor(endpoint, manifest, cors) {\n       this.endpoint = endpoint;\n       this.manifest = manifest;\n       this.cors = cors;\n    }\n\n    getFetcher() {\n       return this.cors ? fetchParams : fetchJsonpParams;\n    }\n}\n\n\n","\nimport React from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport FeatureCell from './FeatureCell.js';\nimport fetchJsonp from 'fetch-jsonp';\nimport ReconciliationService from './ReconciliationService.js';\n\nexport default class FeatureRow extends React.Component {\n   constructor() {\n      super();\n      this.state = {\n        reacheableCORS: 'checking',\n        reacheableJSONP: 'maybe',\n        manifest: {},\n      }; \n   }\n\n   componentDidMount() {\n      fetch(this.props.endpoint, { timeout: 5000 })\n        .then(response => response.json())\n        .then(response => this.setState({manifest: response, reacheableCORS: true}))\n        .catch(error => {\n           this.setState({reacheableCORS: false});\n      });\n      if (this.props.jsonp) {\n        this.checkJsonp();\n      }\n   }\n\n   checkJsonp = () => {\n      this.setState({reacheableJSONP: 'checking'});\n      fetchJsonp(this.props.endpoint)\n        .then(response => response.json())\n        .then(response => this.setState({manifest: response, reacheableJSONP: true}))\n        .catch(error => this.setState({reacheableJSONP: false}));\n   }\n\n   suggestSettings() {\n      return this.state.manifest.suggest || {};\n   }\n\n   get isReacheable() {\n      return this.state.reacheableCORS === true || this.state.reacheableJSONP === true;\n   }\n   \n   hasView() {\n      if (!this.isReacheable)\n        return null;\n      return 'url' in (this.state.manifest.view || {});\n   }\n\n   hasSuggestEntity() {\n      if (!this.isReacheable)\n        return null;\n      return 'entity' in this.suggestSettings();\n   }\n\n   hasSuggestProperty() {\n      if (!this.isReacheable)\n        return null;\n      return 'property' in this.suggestSettings();\n   }\n\n   hasSuggestType() {\n      if (!this.isReacheable)\n        return null;\n      return 'type' in this.suggestSettings();\n   }\n\n   hasPreview() {\n      if (!this.isReacheable)\n        return null;\n      return 'preview' in this.state.manifest;\n   }\n\n   hasExtend() {\n      if (!this.isReacheable)\n        return null;\n      return 'extend' in this.state.manifest;\n   }\n\n   nameCell() {\n      let parts = [\n        <span key='name'>{this.props.name}</span>\n      ];\n      if (this.props.documentation && !this.props.source_url) {\n         parts.push(<span key='docs'> (<a href={this.props.documentation} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Read endpoint documentation\">docs</a>)</span>);\n      }\n      if (this.props.documentation && this.props.source_url) {\n         parts.push(<span key='docs'> (<a href={this.props.documentation} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Read endpoint documentation\">docs</a>, <a href={this.props.source_url} target=\"_blank\" rel=\"noopener noreferrer\" title=\"View endpoint source code\">source</a>)</span>);\n      }\n      if (!this.props.documentation && this.props.source_url) {\n         parts.push(<span key='docs'> (<a href={this.props.source_url} target=\"_blank\" rel=\"noopener noreferrer\" title=\"View endpoint source code\">source</a>)</span>);\n      }\n      if (this.props.wd_uri) {\n         parts.push(<span key=\"wd\" style={{float: 'right'}}>\n           <a href={this.props.wd_uri+'#P6269'} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Edit on Wikidata\">\n            <span className=\"glyphicon glyphicon-pencil\"></span>\n           </a>\n        </span>);\n      }\n      return parts;\n   }\n\n   triggerOnSelect = () => {\n      if (this.props.onSelect) {\n        this.props.onSelect(new ReconciliationService(this.props.endpoint, this.state.manifest, this.state.reacheableCORS));\n      }\n   }\n\n   render() {\n      return (\n        <tr>\n            <td>{this.nameCell()}</td>\n            <td><Button bsStyle=\"primary\" bsSize=\"xsmall\" onClick={this.triggerOnSelect} title=\"Use in test bench\" disabled={!this.isReacheable}><span className=\"glyphicon glyphicon-play\"></span></Button>{' '}<a href={this.props.endpoint} target=\"_blank\" rel=\"noopener noreferrer\">{this.props.endpoint}</a></td>\n            <FeatureCell value={this.state.reacheableCORS} />\n            <FeatureCell value={this.state.reacheableJSONP} onClick={this.checkJsonp} />\n            <FeatureCell value={this.hasView()} />\n            <FeatureCell value={this.hasSuggestEntity()} />\n            <FeatureCell value={this.hasSuggestType()} />\n            <FeatureCell value={this.hasSuggestProperty()} />\n            <FeatureCell value={this.hasPreview()} />\n            <FeatureCell value={this.hasExtend()} />\n        </tr>);\n   }\n}\n\n","import React from 'react';\nimport Table from 'react-bootstrap/lib/Table';\nimport Modal from 'react-bootstrap/lib/Modal';\nimport Button from 'react-bootstrap/lib/Button';\nimport FeatureRow from './FeatureRow.js';\n\nclass Row {\n    constructor(endpoint, name, documentation, source_url, wd_uri) {\n       this.endpoint = endpoint;\n       this.name = name;\n       this.documentation = documentation;\n       this.source_url = source_url;\n       this.wd_uri = wd_uri;\n       this.jsonp = false;\n    }\n\n    useJsonp() {\n       this.jsonp = true;\n    }\n}\n\n\nexport default class FeatureTable extends React.Component {\n    constructor() {\n      super();\n       this.state = {\n         services: [],\n         showAddServiceDialog: false,\n         refreshing: false,\n       };\n\n       this.sparql_query = (\n        \"SELECT ?service ?serviceLabel ?endpoint ?documentation ?source WHERE {\\n\" +\n        \"  ?service p:P6269 ?statement.\\n\"+\n        \"  ?statement ps:P6269 ?endpoint ;\\n\"+\n        \"     pq:P2700 wd:Q64490175.\\n\"+\n        \"  OPTIONAL { ?statement (pq:P973 | pq:P2078) ?documentation }\\n\" +\n        \"  OPTIONAL { ?statement pq:P1324 ?source }\\n\" +\n        \"  SERVICE wikibase:label { bd:serviceParam wikibase:language \\\"[AUTO_LANGUAGE],en\\\". }\\n\" +\n        \"}\\n\" +\n        \"ORDER BY DESC(?endpoint)\\n\");\n    }\n\n    refreshServicesFromWD = (method) => {\n       this.setState({\n         refreshing: true\n       });\n       let url = new URL(\"https://query.wikidata.org/sparql\");\n       let params = {query:this.sparql_query, format: 'json'};\n       let promise = null;\n       if (method === 'GET') {\n         Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n         promise = fetch(url);\n       } else {\n         var urlParams = new URLSearchParams();\n         Object.keys(params).forEach(key => urlParams.append(key, params[key]));\n         promise = fetch(url, {\n           method: 'POST',\n           mode: 'cors',\n           cache: 'no-cache',\n           headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n           body: urlParams,\n         });\n       }\n\n       promise\n        .then(result => result.json())\n        .then(result =>\n            this.setState({\n              services: result.results.bindings.map(entry =>\n                new Row(entry.endpoint.value, entry.serviceLabel.value,\n                    'documentation' in entry ? entry.documentation.value : undefined,\n                    'source' in entry ? entry.source.value : undefined,\n                    entry.service.value)),\n              refreshing: false\n           })\n        )\n        .catch(error => {\n           console.log(error);\n           this.setState({ refreshing: false });\n        });\n    }\n\n    componentDidMount() {\n       this.refreshServicesFromWD('GET');\n    }\n\n    loadAllJsonp = () => {\n       this.setState({\n        services: this.state.services.map(row => { row.useJsonp(); return row })\n       });\n    }\n\n    openAddServiceDialog = () => {\n        this.setState({\n           showAddServiceDialog: true\n        });\n    }\n\n    closeAddServiceDialog = () => {\n        this.setState({\n           showAddServiceDialog: false\n        });\n    }\n\n    get sparqlQueryUrl() {\n        return 'https://query.wikidata.org/#'+encodeURIComponent(this.sparql_query);\n    }\n\n    render() {\n      return (\n        <>\n          <p>Due to <a href=\"https://en.wikipedia.org/wiki/JSONP#Security_concerns\">a security risk inherent to JSONP</a>, only endpoints supporting <a href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">CORS</a> are loaded by default. You can click the{' '}\n          <span className=\"glyphicon glyphicon-search\"></span> button in each row to attempt to load the service via <a href=\"https://en.wikipedia.org/wiki/JSONP\">JSONP</a>.\n          Note that a malicious endpoint could use JSONP to execute arbitrary JavaScript code in this page. If you trust all the reconciliation services listed here, you can also <Button onClick={this.loadAllJsonp} bsSize=\"xsmall\">load all endpoints via JSONP</Button>.\n          </p>\n        <Table striped bordered hover>\n           <thead>\n             <tr>\n               <td>Name</td>\n               <td>Endpoint</td>\n               <td>CORS</td>\n               <td>JSONP</td>\n               <td>View entities</td>\n               <td>Suggest entities</td>\n               <td>Suggest types</td>\n               <td>Suggest properties</td>\n               <td>Preview entities</td>\n               <td>Extend data</td>\n             </tr>\n           </thead>\n           <tbody>\n              {this.state.services.map(\n                row => <FeatureRow\n                        endpoint={row.endpoint}\n                        name={row.name}\n                        documentation={row.documentation}\n                        source_url={row.source_url}\n                        wd_uri={row.wd_uri}\n                        jsonp={row.jsonp}\n                        onSelect={this.props.onSelect}\n                        key={row.endpoint+(row.jsonp ? ' jsonp' : ' cors')} />)\n               }\n           </tbody>\n        </Table>\n        <Button onClick={this.openAddServiceDialog}><span className=\"glyphicon glyphicon-plus\"></span> Add a service</Button>&nbsp;&nbsp;&nbsp;\n        <Button onClick={() => this.refreshServicesFromWD('POST')} disabled={this.state.refreshing}><span className=\"glyphicon glyphicon-refresh\"></span> {this.state.refreshing ? 'Refreshing…' : 'Refresh table'}</Button>\n\n        <Modal show={this.state.showAddServiceDialog} onHide={this.closeAddServiceDialog}>\n          <Modal.Header closeButton>\n            <Modal.Title>How to add a service to this list</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n               This list is generated by <a href={this.sparqlQueryUrl}>a SPARQL query on Wikidata</a>.\n               To add your service to it, follow these steps:\n            </p>\n            <ul>\n                <li>Make sure your service is publicly accessible - local endpoints (such as those with <code>localhost</code> or <code>127.0.0.1</code> in their address) should not be added to this table.</li>\n                <li>Find out if there is already a Wikidata item about your service, your database or your identifier. You can use <a href=\"https://www.wikidata.org/wiki/Special:Search?ns0=1\">Wikidata's search interface</a> for that. If there is not, you can <a href=\"https://www.wikidata.org/wiki/Special:NewItem\">create a new one</a>.</li>\n                <li>Add a statement on that item, using the <a href=\"https://www.wikidata.org/wiki/Property:P6269\">API endpoint (P6269)</a> property, adding the <a href=\"https://www.wikidata.org/wiki/Q64490175\">OpenRefine reconciliation service API (Q64490175)</a> as <a href=\"https://www.wikidata.org/wiki/Property:P2700\">protocol (P2700)</a> in a qualifier. You can also add a link to the documentation for the endpoint by adding a <a href=\"https://www.wikidata.org/wiki/Property:P2078\">user manual link (P2078)</a> or <a href=\"https://www.wikidata.org/wiki/Property:P973\">described at URL (P973)</a> qualifier. See <a href=\"https://www.wikidata.org/wiki/Q922063#P6269\">this example for how it is done</a>.</li>\n                <li>Refresh this table - it might take a few minutes before your service appears in the table.</li>\n            </ul>\n          </Modal.Body>\n        </Modal>\n        </>\n      );\n   }\n}\n","\nimport React from 'react';\nimport Form from 'react-bootstrap/lib/Form';\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\nimport FormControl from 'react-bootstrap/lib/FormControl';\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\nimport HelpBlock from 'react-bootstrap/lib/HelpBlock';\nimport Col from 'react-bootstrap/lib/Col';\nimport fetchJsonp from 'fetch-jsonp';\nimport ReconciliationService from './ReconciliationService.js';\n\nexport default class ReconciliationServiceInput extends React.Component {\n\n  state = {\n    service: this.props.initialService\n  };\n\n  componentWillMount() {\n     this.timer = null;\n  }\n\n  setService(service) {\n     this.setState({\n\tservice: service\n     });\n  }\n\n  handleChange(e) {\n     clearTimeout(this.timer);\n\n     this.setState({\n\tservice: new ReconciliationService(e.target.value, undefined, undefined),\n        error: undefined\n     });\n \n     this.timer = setTimeout(() => this.validateEndpoint(), 1000);\n  }\n\n  validateEndpoint() {\n     let endpoint = this.state.service.endpoint;\n     fetch(endpoint)\n      .then(result => result.json())\n      .then(result => this._setService(endpoint, result, true))\n      .catch(e =>\n\t     fetchJsonp(endpoint)\n\t      .then(result => result.json())\n\t      .then(result => this._setService(endpoint, result, false))\n\t      .catch(e => this._setError(endpoint, e)));\n  }\n\n  _setService(endpoint, manifest, cors) {\n    if(this.state.service.endpoint === endpoint) {\n\tlet service = new ReconciliationService(endpoint, manifest, cors);\n        this.setState({\n\t  service: service \n        });\n        if(this.props.onChange !== undefined) {\n           this.props.onChange(service);\n        }\n    }\n  }\n\n  _setError(endpoint, error) {\n    if(this.state.service.endpoint === endpoint) {\n        this.setState({manifest: undefined, error: error})\n        if(this.props.onChange !== undefined) {\n           this.props.onChange(undefined, undefined);\n        }\n    }\n  }\n  \n  getValidationState() {\n     if (this.state.service !== undefined && this.state.service.manifest !== undefined) {\n        return 'success';\n     } else if(this.state.error !== undefined) {\n        return 'error';\n     }\n     return null;\n  }\n\n  getMessage() {\n     let message = '';\n     if (this.getValidationState() === 'error') {\n        message = 'The endpoint MUST return a JSON document describing the service, accessible vîa CORS or JSONP.';\n        if (this.state.service.endpoint !== undefined && this.state.service.endpoint.startsWith('http://')) {\n           message += ' The endpoint SHOULD be available over HTTPS. Depending on your browser, this test bench might not be able to test reconciliation services over HTTP.';\n        }\n        return message;\n     }\n  }\n\n  handleSubmit(e) {\n     clearTimeout(this.timer);\n     this.validateEndpoint();\n     e.preventDefault();\n  }\n\n  render() {\n     return (\n        <Form horizontal onSubmit={(e) => this.handleSubmit(e)}>\n          <FormGroup controlId=\"endpointField\" validationState={this.getValidationState()}>\n            <Col componentClass={ControlLabel} sm={1}>Endpoint:</Col>\n            <Col sm={11}>\n                <FormControl type=\"text\" value={this.state.service.endpoint} placeholder=\"URL of the reconciliation service endpoint\" onChange={e => this.handleChange(e)}/>\n                <FormControl.Feedback />\n                <HelpBlock>{this.getMessage()}</HelpBlock>\n            </Col>\n          </FormGroup>\n        </Form>\n     );\n  }\n}\n","import React from 'react';\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\n\nexport default class ReconcileSuggest extends React.Component {\n   constructor() {\n     super();\n     this.state = {\n        value: undefined,\n        suggestions: [],\n        isLoading: false,\n     };\n   }\n\n   getValue() {\n     if (this.props.onChange !== undefined) {\n        return this.props.value;\n     } else {\n        return this.state.value;\n     }\n   }\n\n   get manifest() {\n      if (!this.props.service) {\n\t return null;\n      } else {\n\t return this.props.service.manifest;\n      }\n   }\n\n   getUrl() {\n     if (!this.manifest || !this.manifest.suggest) {\n        return null;\n     }\n     let configuration = this.manifest.suggest[this.props.entityClass];\n     if (!configuration) {\n        return null;\n     }\n     return configuration.service_url + configuration.service_path;\n   }\n\n   onSuggestionsFetchRequested = (value) => {\n      let url = this.getUrl();\n      let params = {'prefix':value};\n      if (url === null) {\n         return;\n      }\n      this.setState({isLoading: true});\n      let fetcher = this.props.service.getFetcher();\n      fetcher(url, params)\n        .then(result => result.json())\n        .then(result => {\n           this.setState({suggestions: result.result, isLoading: false})})\n        .catch(e => {\n           console.log(e);\n           this.setState({isLoading: false});\n        });\n   };\n\n   onSuggestionsClearRequested = () => {\n      this.setState({suggestions:[]});\n   };\n\n   onChange = (newValue) => {\n     if (this.props.onChange === undefined) {\n       this.setState({\n         value: newValue[0]\n       });\n     } else {\n        this.props.onChange(newValue[0]);\n     }\n   };\n\n   render() {\n      return (\n        <AsyncTypeahead id={this.props.id}\n           disabled={this.getUrl() === null}\n           isLoading={this.state.isLoading}\n           onSearch={this.onSuggestionsFetchRequested}\n           options={this.state.suggestions}\n           labelKey=\"name\"\n           filterBy={(option,props) => true}\n           selected={this.getValue() ? [this.getValue()] : []}\n           onChange={this.onChange}\n           renderMenuItemChildren={(option, props, index) => \n              <>\n                 <span className=\"suggestItemId\">{option.id}</span>\n                 <span className=\"suggestItemLabel\">{option.name}</span><br />\n                 <span className=\"suggestItemDescription\">{option.description}</span>\n              </>\n           }\n         />\n      );\n   }\n}\n\n","\nimport React from 'react';\nimport FormControl from 'react-bootstrap/lib/FormControl';\nimport Button from 'react-bootstrap/lib/Button';\nimport ReconcileSuggest from './ReconcileSuggest.js';\n\nexport default class PropertyMapping extends React.Component {\n\n  newMapping = () => {\n     this.emitChange(\n          this.props.value.concat([{\n              property: undefined,\n              value: '',\n       }])\n    );\n  }\n\n  deleteMapping = (idx) => {\n     let newArray = this.props.value.slice();\n     newArray.splice(idx, 1);\n     this.emitChange(newArray);\n  }\n\n  onValueChange = (idx, e) => {\n     let newArray = this.props.value.slice();\n     let {property} = newArray[idx];\n     newArray[idx] = {property, value: e.currentTarget.value};\n     this.emitChange(newArray);\n  }\n\n  onPropertyChange = (idx, propertyValue) => {\n     console.log('new property value');\n     console.log(idx);\n     console.log(propertyValue);\n     let newArray = this.props.value.slice();\n     let {value} = newArray[idx];\n     newArray[idx] = {property:propertyValue, value};\n     console.log(newArray);\n     this.emitChange(newArray);\n  }\n\n  emitChange(newValue) {\n     if (this.props.onChange) {\n        this.props.onChange(newValue);\n     }\n  }\n\n  renderMappings() {\n     return this.props.value.map((mapping, idx) =>\n        <div style={{display: 'inline-block', marginBottom: '5px'}} key={idx}>\n            <div style={{display: 'inline-block', width: '45%'}}>\n                <ReconcileSuggest\n                   service={this.props.service}\n                   entityClass=\"property\"\n                   id={'mapping-property-'+idx}\n                   value={mapping.property}\n                   onChange={v => this.onPropertyChange(idx, v)} />\n            </div>\n            <div style={{display: 'inline-block', width: '45%'}}>\n                <FormControl\n                   type=\"text\"\n                   placeholder=\"Type a value\"\n                   value={mapping.value || ''}\n                   onChange={e => this.onValueChange(idx, e)} /></div>\n          <Button bsStyle=\"primary\" bsSize=\"xsmall\" onClick={() => this.deleteMapping(idx)} title=\"delete property\"><span className=\"glyphicon glyphicon-trash\"></span></Button>\n        </div>\n     );\n  }\n\n  render() {\n     return (\n        <div>\n           {this.renderMappings()}<br />\n           <Button onClick={this.newMapping}>Add property</Button>\n        </div>\n     );\n  }\n}\n","\nimport React from 'react';\nimport Badge from 'react-bootstrap/lib/Badge';\nimport ListGroupItem from 'react-bootstrap/lib/ListGroupItem';\n\nexport default class Candidate extends React.Component {\n\n     get url() {\n        let view = null;\n        let manifest = this.props.manifest;\n        if ('view' in manifest && 'url' in this.props.manifest.view && 'id' in this.props.candidate) {\n            view = this.props.manifest.view.url.replace('{{id}}', this.props.candidate.id);\n        }\n        return view;\n     }\n\n     render() {\n        let candidate = this.props.candidate;\n        return (<ListGroupItem key={candidate.id} header={candidate.name} active={candidate.match}>\n                <a href={this.url}>{candidate.id}</a>\n                <Badge style={{float: 'right'}}>{this.props.candidate.score}</Badge>\n            </ListGroupItem>);\n     }\n}\n","import React from 'react';\nimport Tabs from 'react-bootstrap/lib/Tabs';\nimport Tab from 'react-bootstrap/lib/Tab';\nimport Form from 'react-bootstrap/lib/Form';\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\nimport InputGroup from 'react-bootstrap/lib/InputGroup';\nimport FormControl from 'react-bootstrap/lib/FormControl';\nimport Radio from 'react-bootstrap/lib/Radio';\nimport Button from 'react-bootstrap/lib/Button';\nimport Col from 'react-bootstrap/lib/Col';\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\nimport ListGroup from 'react-bootstrap/lib/ListGroup';\nimport ReconcileSuggest from './ReconcileSuggest.js';\nimport PropertyMapping from './PropertyMapping.js';\nimport Candidate from './Candidate.js';\nimport JSONTree from 'react-json-tree';\n\nexport default class TestBench extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n        reconQuery: '',\n        reconType: 'no-type',\n        reconCustomType: undefined,\n        reconProperties: [],\n        reconLimit: undefined\n    };\n  }\n\n  onReconQueryChange = (e) => {\n    this.setState({\n        reconQuery: e.currentTarget.value\n    });\n  }\n\n  onReconTypeChange = (e) => {\n    this.setState({\n        reconType: e.currentTarget.value\n    });\n  }\n\n  onCustomTypeChange = (v) => {\n    this.setState({\n        reconCustomType: v\n    });\n  }\n\n  onReconPropertiesChange = (values) => {\n    this.setState({\n        reconProperties: values\n    });\n  }\n\n  onReconLimitChange = (e) => {\n    this.setState({\n        reconLimit: e.currentTarget.value\n    });\n  }\n\n  get defaultTypes() {\n     if (this.props.service && this.props.service.manifest) {\n        return this.props.service.manifest.defaultTypes || [];\n    } else {\n        return [];\n    }\n  }\n\n  get hasTypeSuggest() {\n     return (this.props.service &&\n\t     this.props.service.manifest &&\n\t     this.props.service.manifest.suggest &&\n\t     this.props.service.manifest.suggest.type);\n  }\n\n  get hasPropertySuggest() {\n     return (this.props.service &&\n\t     this.props.service.manifest &&\n\t     this.props.service.manifest.suggest &&\n\t     this.props.service.manifest.suggest.property);\n  }\n\n  onSubmitReconciliation = (e) => {\n     e.preventDefault();\n     if (!this.props.service || !this.props.service.endpoint) {\n        return;\n     }\n     this.setState({reconResults: 'fetching'});\n     let fetcher = this.props.service.getFetcher();\n     fetcher(this.formulateQueryUrl(), {timeout: 20000})\n        .then(result => result.json())\n        .then(result =>\n           this.setState({\n              reconResults: result.q0.result\n        }))\n        .catch(e => {\n            this.setState({\n              reconError: e.message,\n              reconResults: 'failed',\n        })});\n  }\n\n  renderQueryResults() {\n     if (this.state.reconResults === 'fetching') {\n        return (<div className=\"resultsPlaceholder\">Querying the service...</div>);\n     } else if (this.state.reconResults === 'failed') {\n        return (<div className=\"resultsPlaceholder\">Error: {this.state.reconError}</div>);\n     } else if (this.state.reconResults === undefined) {\n        return (<div />);\n     } else {\n        if (this.state.reconResults.length === 0) {\n           return (<span className=\"noResults\">No results</span>);\n        }\n        return (\n          <ListGroup>\n            {this.state.reconResults.map(result =>\n              <Candidate candidate={result} manifest={this.props.service.manifest} />\n            )}\n          </ListGroup>\n        );\n     }\n  }\n\n  formulateReconQuery() {\n     let query = {\n        query: this.state.reconQuery,\n     };\n     if (this.state.reconType === 'custom-type' && this.state.reconCustomType !== undefined) {\n        query.type = this.state.reconCustomType.id;\n     } else if (this.state.reconType !== 'no-type') {\n        query.type = this.state.reconType;\n     }\n     if (this.state.reconProperties.length > 0) {\n        query.properties = this.state.reconProperties\n           .filter(m => m !== undefined && m.property && m.value)\n           .map(m => {return {pid: m.property.id, v: m.value}})\n     }\n     if (!isNaN(parseInt(this.state.reconLimit))) {\n        query.limit = parseInt(this.state.reconLimit);\n     }\n     return query;\n  }\n\n  formulateQueryUrl() {\n     let baseUrl = this.props.service.endpoint;\n     if (!baseUrl) {\n        return '#';\n     }\n     let params = {\n        queries: JSON.stringify({q0: this.formulateReconQuery()})\n     };\n     let url = new URL(baseUrl);\n     Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n     return url.toString();\n  }\n\n  renderTypeChoices() {\n    let current = this.state.reconType;\n    let choices = this.defaultTypes.map(t =>\n       <Radio\n          name=\"reconcileType\"\n          key={\"key_\"+t.id}\n          value={t.id}\n          checked={current === t.id}\n          onChange={this.onReconTypeChange}>\n        {t.name}<br /><span className=\"reconTypeId\">{t.id}</span>\n      </Radio>\n    );\n    if (this.hasTypeSuggest) {\n       choices.push(<Radio\n         name=\"reconcileType\"\n         key=\"custom-type\"\n         value=\"custom-type\"\n         checked={current === 'custom-type'}\n         onChange={this.onReconTypeChange}>\n           Custom:\n           <div>\n             <ReconcileSuggest\n                service={this.props.service}\n                entityClass=\"type\"\n                id=\"recon-custom-type-suggest\"\n                value={this.state.reconCustomType}\n                onChange={this.onCustomTypeChange} />\n           </div>\n        </Radio>);\n    }\n    choices.push(<Radio\n        name=\"reconcileType\"\n        key=\"no-type\"\n        value=\"no-type\"\n        checked={current === 'no-type'}\n        onChange={this.onReconTypeChange}>Reconcile against no particular type</Radio>);\n    return choices;\n  }\n\n  render() {\n    const theme = {\n       scheme: 'monokai',\n        author: 'wimer hazenberg (http://www.monokai.nl)',\n        base00: '#000000', // '#272822',\n        base01: '#383830',\n        base02: '#49483e',\n        base03: '#75715e',\n        base04: '#a59f85',\n        base05: '#00ff00', //'#f8f8f2',\n        base06: '#f5f4f1',\n        base07: '#f9f8f5',\n        base08: '#f92672',\n        base09: '#fd971f',\n        base0A: '#f4bf75',\n        base0B: '#a6e22e',\n        base0C: '#a1efe4',\n        base0D: '#66d9ef',\n        base0E: '#ae81ff',\n        base0F: '#cc6633'\n        };\n\n    return (\n       <Tabs defaultActiveKey=\"reconcile\" animation={false} id=\"test-bench-tabs\">\n         <Tab eventKey=\"reconcile\" title=\"Reconcile\">\n            <div className=\"tabContent\">\n              <Col sm={5}>\n                <Form horizontal>\n                    <FormGroup controlId=\"reconcileName\">\n                        <Col componentClass={ControlLabel} sm={2}>Name:</Col>\n                        <Col sm={10}>\n                            <InputGroup>\n                            <FormControl\n                                type=\"text\"\n                                placeholder=\"Entity to reconcile\"\n                                value={this.state.reconQuery}\n                                onChange={this.onReconQueryChange} />\n                                <InputGroup.Button><Button onClick={this.onSubmitReconciliation} type=\"submit\" bsStyle=\"primary\" disabled={!this.props.service}>Reconcile</Button></InputGroup.Button>\n                            </InputGroup>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup controlId=\"reconcileType\">\n                        <Col componentClass={ControlLabel} sm={2}>Type:</Col>\n                        <Col sm={10}>\n                            {this.renderTypeChoices()}\n                        </Col>\n                    </FormGroup>\n                    {(this.hasPropertySuggest ?\n                    <FormGroup controlId=\"reconcileProperties\">\n                        <Col componentClass={ControlLabel} sm={2}>Properties:</Col>\n                        <Col sm={10}>\n                            <PropertyMapping service={this.props.service} value={this.state.reconProperties} onChange={this.onReconPropertiesChange} />\n                        </Col>\n                    </FormGroup> : <div/>)}\n                    <FormGroup controlId=\"reconcileLimit\">\n                        <Col componentClass={ControlLabel} sm={2}>Limit:</Col>\n                        <Col sm={10}>\n                           <FormControl\n                                type=\"number\"\n                                placeholder=\"Maximum number of candidates\"\n                                value={this.state.reconLimit}\n                                onChange={(v) => this.onReconLimitChange(v)} />\n                        </Col>\n                    </FormGroup>\n                </Form>\n              </Col>\n              <Col sm={3}>\n                 <JSONTree\n                        theme={theme}\n                        data={this.formulateReconQuery()}\n                        getItemString={(type, data, itemType, itemString) => ''}\n                        shouldExpandNode={(keyName, data, level) => true}\n                        hideRoot={true} />\n                 <br />\n                 <a href={this.formulateQueryUrl()} title=\"See query results on the service\" target=\"_blank\" rel=\"noopener noreferrer\">View query results on the service</a>\n              </Col>\n              <Col sm={4}>\n                 {this.renderQueryResults()}\n              </Col>\n            </div>\n         </Tab>\n         <Tab eventKey=\"suggest\" title=\"Suggest\">\n            <div className=\"tabContent\">\n              <Form horizontal>\n                <FormGroup controlId=\"suggestEntityTestBench\">\n                    <Col componentClass={ControlLabel} sm={1}>Entity:</Col>\n                    <Col sm={11}>\n                        <ReconcileSuggest service={this.props.service} entityClass=\"entity\" id=\"entity-suggest-test\" />\n                    </Col>\n                </FormGroup>\n                <FormGroup controlId=\"suggestTypeTestBench\">\n                    <Col componentClass={ControlLabel} sm={1}>Type:</Col>\n                    <Col sm={11}>\n                        <ReconcileSuggest service={this.props.service} entityClass=\"type\" id=\"type-suggest-test\" />\n                    </Col>\n                </FormGroup>\n                <FormGroup controlId=\"suggestPropertyTestBench\">\n                    <Col componentClass={ControlLabel} sm={1}>Property:</Col>\n                    <Col sm={11}>\n                        <ReconcileSuggest service={this.props.service} entityClass=\"property\" id=\"property-suggest-test\" />\n                    </Col>\n                </FormGroup>\n              </Form>\n            </div>\n         </Tab>\n         <Tab eventKey=\"preview\" title=\"Preview\">\n           <div className=\"tabContent\">\n                <p>Coming soon</p>\n           </div>\n         </Tab>\n         <Tab eventKey=\"extend\" title=\"Extend\">\n           <div className=\"tabContent\">\n                <p>Coming soon</p>\n           </div>\n         </Tab>\n       </Tabs>\n    );\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport FeatureTable from './FeatureTable.js';\nimport FeatureRow from './FeatureRow.js';\nimport Tabs from 'react-bootstrap/lib/Tabs';\nimport Tab from 'react-bootstrap/lib/Tab';\nimport ReconciliationServiceInput from './ReconciliationServiceInput.js';\nimport TestBench from './TestBench.js';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedEndpoint: '',\n      service: {},\n      openTab: 'servicesList',\n    };\n  }\n\n  onEndpointSelect = (service) => {\n    this.setState({\n      service: service,\n      selectedEndpoint: service.endpoint,\n      openTab: 'testBench',\n   });\n  }\n\n  onEndpointChange = (service) => {\n    this.setState({\n       service: service,\n    });\n  };\n\n  handleTabSelect = (key) => {\n     this.setState({ openTab: key });\n  };\n\n  render() {\n    let testBench = <div />;\n    if (this.state.service && this.state.service.endpoint) {\n        testBench = <TestBench service={this.state.service} />;\n    }\n    return (\n      <div className=\"App\" style={{margin: '20px'}}>\n        <h1>Reconciliation service test bench</h1>\n        <Tabs activeKey={this.state.openTab} onSelect={this.handleTabSelect} animation={false} id=\"main-tabs\">\n          <Tab eventKey=\"servicesList\" title=\"Services\">\n            <div className=\"tabContent\">\n                <p>This table lists reconciliation services known to <a href=\"https://www.wikidata.org/\">Wikidata</a> and\n                    indicates which features of the <a href=\"https://reconciliation-api.github.io/specs/latest/\">reconciliation API</a> they support.\n                </p>\n                <p>If you are viewing this app over HTTPS it is likely that reconciliation services using HTTP are blocked as \"mixed content\". You can disable this protection in your browser to load HTTP reconciliation services.</p>\n                <FeatureTable onSelect={this.onEndpointSelect}> \n                    <FeatureRow name=\"OpenCorporates\" endpoint=\"https://opencorporates.com/reconcile\" documentation=\"https://api.opencorporates.com/documentation/Open-Refine-Reconciliation-API\" />\n                </FeatureTable>\n            </div>\n          </Tab>\n          <Tab eventKey=\"testBench\" title=\"Test bench\">\n            <div className=\"tabContent\">\n              <p>This form lets you test a reconciliation endpoint interactively.</p>\n              <ReconciliationServiceInput\n                 onChange={this.onEndpointChange}\n\t         initialService={this.state.service}\n                 key={this.state.selectedEndpoint} />\n              {testBench}\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}